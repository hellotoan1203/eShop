@model eShop.Service.ViewModel.RegistrationViewModel

@{
    ViewBag.Title = "Registration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="about py-lg-4 py-md-3 py-sm-3 py-3">
    <div class="container py-lg-5 py-md-4 py-sm-4 py-3">
        <h3 class="title text-center mb-lg-5 mb-md-4 mb-sm-4 mb-3">Registration</h3>
        <div class="about-sub-inner text-center mt-lg-4 mt-3">
            @if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
            {
                if (ViewBag.Message != null)
                {
                    <div class="alert alert-success">
                        <strong>Success!</strong> @ViewBag.Message
                    </div>
                }
            }
            else
            {
                using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group row">
                            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-3", style = "text-align: left" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                                @Html.ValidationMessage("Warning User Name", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-3", style = "text-align: left" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-3", style = "text-align: left" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3", style = "text-align: left" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                @Html.ValidationMessage("Warning Email", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-3", style = "text-align: left" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-3", style = "text-align: left" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-3", style = "text-align: left" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-3", style = "text-align: left" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            <div class="col-md-offset-6 col-md-12">
                                <input type="submit" value="Register" class="btn btn-default" />
                            </div>
                        </div>
                    </div>

                    if (ViewBag.Message != null)
                    {
                        <div class="alert alert-danger">
                            <strong>Error!</strong> @ViewBag.Message
                        </div>
                    }

                }
            }
        </div>
    </div>
</section>

@section Scripts{

    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}
